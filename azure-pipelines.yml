trigger:
- prd
- master

pool:
  vmImage: ubuntu-latest

variables:
- group: dev-sodexo

steps:
- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Setting up SSH key for GitHub..."
      mkdir -p ~/.ssh
      echo "${GITHUB_SSH_KEY}" > ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      echo "Host github.com" >> ~/.ssh/config
      echo "  Hostname ssh.github.com" >> ~/.ssh/config
      echo "  Port 443" >> ~/.ssh/config
      echo "SSH key setup completed. Verifying..."
      if [ ! -f ~/.ssh/id_rsa ]; then
        echo "SSH key file not found. Aborting."
        exit 1
      fi
      ssh -T -p 443 git@ssh.github.com || { echo "SSH connection to GitHub failed. Aborting."; exit 1; }
  displayName: 'Set up SSH key for GitHub'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Cloning repository and switching to branch..."
      mkdir -p ~/project
      cd ~/project
      if [ ! -d .git ]; then
        git clone ${REPO_URL} .
      fi
      git checkout ${BRANCH_NAME}
      git pull origin ${BRANCH_NAME}
  displayName: 'Clone GitHub repository and pull latest changes'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      echo "Using Node.js v18.20.3..."
      nvm use 18.20.3
      echo "Installing dependencies..."
      cd ~/project
      npm install || { echo "npm install failed, aborting."; exit 1; }
  displayName: 'Install npm dependencies'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Starting application to verify it runs correctly..."
      cd ~/project
      npm start &
      sleep 10
      if ! pgrep -f "npm start"; then
        echo "Application did not start correctly, aborting."
        exit 1
      fi
      echo "Application started successfully, stopping it..."
      pkill -f "npm start"
  displayName: 'Start application to verify'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Building the project..."
      cd ~/project
      npm run build
  displayName: 'Build the project'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Creating directory /var/www/html/sodexo if it does not exist..."
      sudo mkdir -p /var/www/html/sodexo
      sudo chown $(whoami):$(whoami) /var/www/html/sodexo
      echo "Cleaning up old files..."
      sudo rm -rf /var/www/html/sodexo/*
      echo "Copying built files to /var/www/html/sodexo..."
      sudo cp -r ~/project/build/* /var/www/html/sodexo/
  displayName: 'Copy built files to destination'
