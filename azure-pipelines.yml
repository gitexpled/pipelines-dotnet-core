trigger:
- prd
- master

pool:
  vmImage: ubuntu-latest

variables:
- group: devSodexo

steps:
- script: |
    echo "Printing environment variables..."
    echo "BRANCH_NAME: $(BRANCH_NAME)"
    echo "REPO_URL: $(REPO_URL)"
    echo "GITHUB_PAT is set"  # No imprimir el valor para mantener la seguridad
    echo "FOLDER_PROJECT: $(FOLDER_PROJECT)"
  displayName: 'Print environment variables'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Cloning repository and switching to branch..."
      mkdir -p ~/project/$(FOLDER_PROJECT)
      cd ~/project/$(FOLDER_PROJECT)
      if [ ! -d .git ]; then
        REPO_URL=$(echo $(REPO_URL) | sed 's|https://||')
        git clone https://$(GITHUB_PAT):x-oauth-basic@$REPO_URL .
      else
        git fetch origin
      fi
      git checkout $(BRANCH_NAME)
      git pull origin $(BRANCH_NAME)
  displayName: 'Clone GitHub repository and pull latest changes'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      echo "Using Node.js v18.20.3..."
      nvm use 18.20.3
      echo "Installing dependencies..."
      cd ~/project/$(FOLDER_PROJECT)
      npm install || { echo "npm install failed, aborting."; exit 1; }
  displayName: 'Install npm dependencies'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Starting application to verify it runs correctly..."
      cd ~/project/$(FOLDER_PROJECT)
      npm start &
      sleep 10
      if ! pgrep -f "npm start"; then
        echo "Application did not start correctly, aborting."
        exit 1
      fi
      echo "Application started successfully, stopping it..."
      pkill -f "npm start"
  displayName: 'Start application to verify'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Building the project..."
      cd ~/project/$(FOLDER_PROJECT)
      npm run build
  displayName: 'Build the project'

- task: SSH@0
  inputs:
    sshEndpoint: 'server qa'
    port: 25536 # Puerto del servidor
    runOptions: inline
    inline: |
      echo "Creating directory /var/www/html/sodexo if it does not exist..."
      sudo mkdir -p /var/www/html/sodexo
      sudo chown $(whoami):$(whoami) /var/www/html/sodexo
      echo "Cleaning up old files..."
      sudo rm -rf /var/www/html/sodexo/*
      echo "Copying built files to /var/www/html/sodexo..."
      sudo cp -r ~/project/$(FOLDER_PROJECT)/build/* /var/www/html/sodexo/
  displayName: 'Copy built files to destination'
